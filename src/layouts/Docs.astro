---
import config from "@data/config.json";
import "@styles/index.scss";
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>{config.project.name} Docs</title>
    <style is:inline>
      .docs-container {
        max-width: 800px;
        width: 100%;
        margin: 0 auto;
        padding: 4rem 1.5rem;
      }

      .component-container {
        padding: 1em;
        border-radius: 8px;
        border: 1px dashed #d6d6d6;
      }

      .component-container.horizontal {
        display: flex;
        gap: 1rem;
        flex-wrap: wrap;
      }

      @media (max-width: 768px) {
        .component-container.horizontal {
          flex-direction: column;
          align-items: center;
        }
      }

      .component-container.vertical {
        display: flex;
        flex-direction: column;
        gap: 1rem;
      }

      .component-container.icons {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
        gap: 0 0.5rem;
        padding: 2rem;
      }

      .component-container.icons span {
        display: flex;
        align-items: center;
        gap: 0.8rem;
        cursor: pointer;
        padding: 0.4rem 0.8rem;
        border-radius: 5px;
      }

      .component-container.icons span:hover {
        background-color: #f4f4f4;
      }

      .component-container.icons small {
        color: #8890a0;
      }

      .docs-container h1 {
        margin-top: 0;
        margin-bottom: 0.5em;
        padding-bottom: 0.325em;
        font-size: 1.875rem;
        border-bottom: 1px solid #d6d6d6;
      }

      .docs-container h2 {
        margin-top: 2em;
        margin-bottom: 0.5em;
        padding-bottom: 0.5em;
        font-size: 1.325rem;
        border-bottom: 1px solid #d6d6d6;
      }

      .docs-container h3,
      .docs-container h4,
      .docs-container h5,
      .docs-container h6 {
        margin-top: 1em;
        margin-bottom: 0.5em;
        font-size: 1.325rem;
        font-weight: 300;
      }

      .docs-container p {
        margin: 1rem 0;
        color: #8890a0;
      }

      .docs-container pre {
        margin: 1em 0;
        padding: 1em;
        border-radius: 8px;
      }

      .docs-container hr {
        border-bottom: 0;
        border-top: 1px solid #d6d6d6;
      }
      .dark-mode-toggle {
        position: fixed;
        top: 1rem;
        right: 1rem;
        width: 3rem;
        height: 3rem;
        background-color: transparent;
        border: 2px solid #8890a0;
        border-radius: 50%;
        padding: 0.5rem;
        cursor: pointer;
        z-index: 1000;
        display: flex;
        justify-content: center;
        align-items: center;
        color: #8890a0;
      }
      .copy-alert {
        opacity: 0;
        position: fixed;
        top: 1rem;
        left: 1rem;
        background-color: #f4f4f4;
        padding: 0.5rem 1rem;
        border-radius: 8px;
        z-index: 1000;
        transition: opacity 0.3s ease-in-out;
      }
      .copy-alert.copied {
        opacity: 1;
        display: block;
      }
    </style>
  </head>
  <body>
    {
      config.project.darkmode && (
        <button class="dark-mode-toggle">
          <svg
            fill="none"
            width="24"
            height="24"
            viewBox="0 0 24 24"
            stroke-width="2"
            stroke="currentColor"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              d="M21.752 15.002A9.72 9.72 0 0 1 18 15.75c-5.385 0-9.75-4.365-9.75-9.75 0-1.33.266-2.597.748-3.752A9.753 9.753 0 0 0 3 11.25C3 16.635 7.365 21 12.75 21a9.753 9.753 0 0 0 9.002-5.998Z"
            />
          </svg>
        </button>
      )
    }
    <main class="docs-container">
      <slot />
    </main>
  </body>
</html>

<script is:inline>
  /**
   * This script can be modified according to the CSS architecture of your project
   */
  const darkModeButton = document.querySelector(".dark-mode-toggle");

  if (darkModeButton) {
    darkModeButton.addEventListener("click", () => {
      document.documentElement.setAttribute(
        "data-theme",
        document.documentElement.getAttribute("data-theme") === "dark"
          ? "light"
          : "dark"
      );

      darkModeButton.innerHTML =
        document.documentElement.getAttribute("data-theme") === "dark"
          ? `
        <svg fill="none" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" d="M12 3v2.25m6.364.386-1.591 1.591M21 12h-2.25m-.386 6.364-1.591-1.591M12 18.75V21m-4.773-4.227-1.591 1.591M5.25 12H3m4.227-4.773L5.636 5.636M15.75 12a3.75 3.75 0 1 1-7.5 0 3.75 3.75 0 0 1 7.5 0Z" />
        </svg>
      `
          : `
        <svg fill="none" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" d="M21.752 15.002A9.72 9.72 0 0 1 18 15.75c-5.385 0-9.75-4.365-9.75-9.75 0-1.33.266-2.597.748-3.752A9.753 9.753 0 0 0 3 11.25C3 16.635 7.365 21 12.75 21a9.753 9.753 0 0 0 9.002-5.998Z" />
        </svg>
      `;
    });
  }
</script>
