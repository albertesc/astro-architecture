---
import "./input.scss";

interface Props {
  label: string;
  name: string;
  placeholder?: string;
  value?: string;
  disabled?: boolean;
  helperText?: string;
  status?: "error" | "success";
}

const { label, placeholder, name, value, disabled, helperText, status } =
  Astro.props;
---

<div
  class:list={[
    "input",
    status === "error" && "input--error",
    status === "success" && "input--success",
  ]}
>
  {
    label ? (
      <label class="input__label" for={name}>
        {label}
      </label>
    ) : (
      <label class="sr-only" for={name}>
        {placeholder}
      </label>
    )
  }
  <div class="input__wrapper">
    <input
      type="text"
      name={name}
      value={value}
      id={name}
      class="input__control"
      placeholder={placeholder}
      disabled={disabled}
      aria-invalid="false"
      aria-describedby={name}
    />
    {
      status === "error" && (
        <svg
          xmlns="http://www.w3.org/2000/svg"
          fill="none"
          viewBox="0 0 24 24"
          stroke-width="1.5"
          stroke="currentColor"
          class="w-6 h-6"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            d="M12 9v3.75m-9.303 3.376c-.866 1.5.217 3.374 1.948 3.374h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 3.378c-.866-1.5-3.032-1.5-3.898 0L2.697 16.126ZM12 15.75h.007v.008H12v-.008Z"
          />
        </svg>
      )
    }
    {
      status === "success" && (
        <svg
          xmlns="http://www.w3.org/2000/svg"
          fill="none"
          viewBox="0 0 24 24"
          stroke-width="1.5"
          stroke="currentColor"
          class="w-6 h-6"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            d="M9 12.75 11.25 15 15 9.75M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z"
          />
        </svg>
      )
    }
  </div>
  {helperText && <span class="input__helper">{helperText}</span>}
</div>
